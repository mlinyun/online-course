<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mlinyun.onlinecourse.data.dao.mapper.UserRoleMapper">

    <resultMap id="BaseResultMap" type="com.mlinyun.onlinecourse.data.entity.UserRole">
        <id property="id" column="id" jdbcType="VARCHAR"/>
        <result property="createBy" column="createBy" jdbcType="VARCHAR"/>
        <result property="createTime" column="createTime" jdbcType="TIMESTAMP"/>
        <result property="delFlag" column="delFlag" jdbcType="INTEGER"/>
        <result property="updateBy" column="updateBy" jdbcType="VARCHAR"/>
        <result property="updateTime" column="updateTime" jdbcType="TIMESTAMP"/>
        <result property="roleId" column="roleId" jdbcType="VARCHAR"/>
        <result property="userId" column="userId" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="findByUserId" resultType="com.mlinyun.onlinecourse.data.entity.Role">
        SELECT r.id id, name, r.dataType
        FROM user_role ur
                 LEFT JOIN role r
                           ON ur.roleId = r.id
        WHERE userId = #{userId}
    </select>

    <select id="findDepIdsByUserId" resultType="java.lang.String">
        SELECT DISTINCT rd.departmentId
        FROM role_department rd
        WHERE role_id IN
              (SELECT ur.roleId FROM user_role ur WHERE ur.userId = #{userId})
    </select>

    <sql id="Base_Column_List">
        id,createBy,createTime,
        delFlag,updateBy,updateTime,
        roleId,userId
    </sql>
</mapper>
